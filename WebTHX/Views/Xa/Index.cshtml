@model IEnumerable<WebTHX.Entities.Xa>


@{
    ViewData["Title"] = "Index";
    var i = 0;
    var Huyen = ViewData["Huyen"] as IEnumerable<WebTHX.Entities.Huyen>;
    var Tinh = ViewData["Tinh"] as IEnumerable<WebTHX.Entities.Tinh>;
}
<div class="row">

    <div class="col-xl-12">
        <h4 class="card-title mb-0 flex-grow-1">
                    Danh Sách Xã
        </h4>
    </div>
            </div><!-- end card header -->

                    <div class="table-responsive">
                        <table class="table table-bordered align-middle table-nowrap mb-0">
                            <thead class="thead-light text-center">
                                <tr>
                                    <th scope="col">Mã Xã</th>
                                    <th scope="col">Tên Xã</th>
                                    <th scope="col">Cấp</th>
                                    <th scope="col">Mã Huyện</th>
                                    <th scope="col">Tên Huyện</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    var tenHuyen = Huyen.FirstOrDefault(t => t.MaH == item.MaH)?.Ten ?? "Không xác định";
                                <tr>
                                    <td class="fw-medium text-center">@item.MaX</td>
                                    <td class="text-center">@item.Ten</td>
                                    <td class="text-center">@item.Cap</td>
                                    <td class="text-center">@item.MaH</td>
                                    <td class="text-center">@tenHuyen</td>
                                    <td class="text-center">
                                        <button type="button" class="btn no-border text-success me-1 edit-button" onclick="openEditModal('@item.MaX', '@item.Ten', '@item.Cap', '@item.MaH')">Edit |</button>
                                        <form asp-controller="Xa" asp-action="Delete" method="post" style="display: inline;">
                                            <input type="hidden" name="id" value="@item.MaX" />
                                            <button type="submit" class="btn no-border text-success">Delete</button>
                                        </form>
                                    </td>
                                </tr>
                                }
            <div class="col-xl-12 mt-3">
                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createModal">Create New</button>
            </div>
                            </tbody>
                        </table>
                    </div>
<style>
    .btn-success {
        border: none;
        background-color: transparent;
        color: #198754; /* Màu chữ tương ứng */
        padding: 0;
        cursor: pointer;
    }

        .btn-success:focus, .btn-success:hover {
            background-color: transparent; /* Loại bỏ màu nền khi hover hoặc focus */
            color: #198754; /* Màu chữ tương ứng */
        }

        .btn-success:focus {
            box-shadow: none; /* Loại bỏ hiệu ứng khi focus */
        }
</style>

<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createModalLabel">Create Xã</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-controller="Xa" asp-action="Create" method="post">
                    <div class="mb-3">
                        <label for="Tinh" class="form-label">Tỉnh</label>
                        <select id="Tinh" class="form-control" name="MaT" onchange="filterHuyen()">
                            @foreach (var data in Tinh)
                            {
                                <option value="@data.MaT">@data.Ten</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="Huyen" class="form-label">Huyện</label>
                        <select id="Huyen" class="form-control" name="MaH">
                            <!-- Option for Huyen will be populated dynamically using JavaScript -->
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="MaX" class="form-label">Mã Xã</label>
                        <input type="text" class="form-control" name="MaX" id="MaX">
                    </div>
                    <div class="mb-3">
                        <label for="Ten" class="form-label">Tên Xã</label>
                        <input type="text" class="form-control" name="Ten" id="Ten">
                    </div>
                    <div class="mb-3">
                        <label for="Cap" class="form-label">Cấp</label>
                        <input type="text" class="form-control" name="Cap" id="Cap">
                    </div>
                    <button type="submit" class="btn btn-primary">Create</button>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editModalLabel">Edit Xã</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editForm" asp-controller="Xa" asp-action="Edited" method="post">
                    <input type="hidden" id="editMaX" name="MaX" />
                    <div class="mb-3">
                        <label for="editTen" class="form-label">Tên Xã</label>
                        <input type="text" class="form-control" id="editTen" name="Ten">
                    </div>
                    <div class="mb-3">
                        <label for="editCap" class="form-label">Cấp</label>
                        <input type="text" class="form-control" id="editCap" name="Cap">
                    </div>
                    <div class="mb-3">
                        <label for="editMaH" class="form-label">Mã Huyện</label>
                        <input type="text" class="form-control" id="editMaH" name="MaH">
                    </div>
                    <button type="submit" class="btn btn-primary">Save</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function openEditModal(maX, ten, cap, maH) {
        // Set data to the edit modal form
        document.getElementById('editMaX').value = maX;
        document.getElementById('editTen').value = ten;
        document.getElementById('editCap').value = cap;
        document.getElementById('editMaH').value = maH;

        // Open the edit modal
        var myModal = new bootstrap.Modal(document.getElementById('editModal'));
        myModal.show();
    }

    // Handle form submission
    document.getElementById('editForm').addEventListener('submit', function (event) {
        // Prevent the default form submission
        event.preventDefault();

        // Submit the form using AJAX
        var formData = new FormData(this);
        fetch(this.action, {
            method: this.method,
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                // Handle successful response
                console.log(data);
                if (data.success) {
                    // Close the modal after successful submission
                    var myModal = new bootstrap.Modal(document.getElementById('editModal'));
                    myModal.hide();
                    // Reload the page to update the data
                    location.reload(); // Tải lại trang
                }
            })
            .catch(error => {
                // Handle error
                console.error('There was an error!', error);
            });
    });
</script>

<script>
    function filterHuyen() {
        var tinhDropdown = document.getElementById('Tinh');
        var selectedTinh = tinhDropdown.options[tinhDropdown.selectedIndex].value;

        var huyenDropdown = document.getElementById('Huyen');
        var huyenOptions = huyenDropdown.getElementsByTagName('option');

        // Hide all Huyen options
        for (var i = 0; i < huyenOptions.length; i++) {
            huyenOptions[i].style.display = 'none';
        }

        // Show Huyen options belonging to the selected Tinh
        var selectedHuyens = document.querySelectorAll('#Huyen option[data-tinh="' + selectedTinh + '"]');
        for (var j = 0; j < selectedHuyens.length; j++) {
            selectedHuyens[j].style.display = 'block';
        }
    }

    // Call filterHuyen() initially to populate Huyen based on the initially selected Tinh
    filterHuyen();
</script>

@* Populate Huyen dropdown options based on Tinh selection *@
@{
    var huyenOptions = "";
    foreach (var huyen in Huyen)
    {
        huyenOptions += "<option value=\"" + huyen.MaH + "\" data-tinh=\"" + huyen.MaT + "\">" + huyen.Ten + "</option>";
    }
}

@* Render Huyen dropdown with populated options *@
<script>
    document.getElementById('Huyen').innerHTML = '@Html.Raw(huyenOptions)';
</script> 